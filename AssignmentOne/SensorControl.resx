<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picSensorIcon.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAOHSURBVHhe7d3BjlVVGIRRHkTGRA0PDjFBnekzKYqOdIL7NIthzYRb1Tkr2YkkX9L13043zHxx
        u91ut9vtdlv18ePHl+f9cN5f5625Nr8775Vztp1Drm/G7+ete3/eS2ftOkdcPxnPxVtn7TpHLP6aSj44
        a5dDng1n7XLHs+GsXe54Npy1yx3PhrN2uSOS1TArku1yRySrYVYk2+WOSFbDrEi2yx2RrIZZkWyXOyJZ
        DbMi2S53RLIaZkWyXe6IZDXMimS73BHJapgVyXa5I5LVMCuS7XJHJKthViTb5Y5IVsOsSLbLHZGshlmR
        bJc7IlkNsyLZLndEshpmRbJd7ohkNcyKZLvcEclqmBXJdrkjktUwK5Ltckckq2FWJNvljkhWw6xItssd
        kayGWZFslzsiWQ2zItkud0SyGmZFsl3uiGQ1zIpku9wRyWqYFcl2uSOS1TArku1yRySrYVYk2+WOSFbD
        rEi2yx2RrIZZkWyXOyJZDbMi2S53RLIaZkWyXe6IZDXMimS73BHJapgVyXa5I5LVMCuS7XJHJKthViTb
        5Y5IVsOsSLbLHZGshlmRbJc7IlkNsyLZLndEshpmRbJd7ohkNcyKZLvcEclqmBXJdrkjktUwK5Ltckck
        q2FWJNvljkhWw6xItssdkayGWZFslzsiWQ2zItkud0SyGmZFsl3uiGQ1zIpku9wRyWqYFcl2uSOS1TAr
        ku1yRySrYVYk2+WOSFbDrEi2yx2RrIZZkWyXOyJZDbMi2S53RLIaZkWyXe6IZDXMimS73BHJapgVyXa5
        I5LVMCuS7XJHJKthViTb5Y5IVsOsSLbLHZGshlmRbJc7IlkNsyLZLndEshpmRbJd7ohkNcyKZLvcEclq
        mBXJdrkjktUwK5Ltckckq2FWJNvljkhWw6xItssdkayGWZFslzsiWQ2zItkud0SyGmZFsl3uiGQ1zIpk
        u9wRyWqYFcm+rPN1vj/v5/M+XF/0azKhhllf0/WZ/3Ted58HvD7v7/Me4mlEEbMe4foevL4G/Pr0xwfx
        OdQw61F+uQb8++m/H8PnUMOsR/nn0d+QP30ONc6mR/4P+Z++IY/8lfXG51DjbHr3adpDPP3KetRf6r+d
        943PocbZ9Oq899fAr+z6yXz9ecR35/143h/nfWnXP/PenFf3zfjsbHt53ltbv7TrM79+Kr/15W+32+12
        u91u/7MXL/4DmmktxIeUkP8AAAAASUVORK5CYII=
</value>
  </data>
</root>